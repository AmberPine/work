<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"
       default-lazy-init="true">
    <description>Spring Configuration</description>
    <!-- load properties -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:ambersec.properties" />
    <!-- load properties instance，can use (@Value("#{APP_PROP['jdbc.driver']}") String jdbcDriver to load data  -->
    <util:properties id="APP_PROP" location="classpath:ambersec.properties" local-override="true"/>
    <!-- main container not to scan @Controller，in SpringMvc to scan @Controller annotation  -->
    <context:component-scan base-package="com.ambersec"><!-- base-package if have many，use“,”split -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	<!-- DataSource Begin -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.druid.url}"></property>
        <property name="username" value="${jdbc.druid.username}"></property>
        <property name="password" value="${jdbc.druid.password}"></property>
        <property name="driverClassName" value="${jdbc.druid.driverClassName}"></property>
        <property name="filters" value="${jdbc.druid.filters}"></property>

        <property name="maxActive" value="${jdbc.druid.maxActive}"/>
        <property name="initialSize" value="${jdbc.druid.initialSize}"/>
        <property name="maxWait" value="${jdbc.druid.maxWait}"/>
        <property name="minIdle" value="${jdbc.druid.minIdle}"/>

        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}"/>

        <property name="validationQuery" value="${jdbc.druid.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.druid.testOnReturn}"/>
        <property name="maxOpenPreparedStatements"
                  value="${jdbc.druid.maxOpenPreparedStatements}"/>
        <property name="removeAbandoned" value="${jdbc.druid.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.druid.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${jdbc.druid.logAbandoned}"/>
        <property name="poolPreparedStatements" value="${jdbc.druid.poolPreparedStatements}"></property>
        <property name="connectionProperties" value="config.decrypt=true"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- scanning @Transactional-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

     <!-- internationalization configure-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="message"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
    <!-- init some data -->
    <bean id="initData" class="com.ambersec.cloud.interfaces.web.listener.InitDataListener" />
    <!-- id generate bean -->
    <bean id="idGen" class="com.ambersec.cloud.infrastructure.utils.IdGen">
        <constructor-arg name="workerId" value="${snowflake_workerId}" />
        <constructor-arg name="datacenterId" value="${snowflake_datacenterId}" />
    </bean>
</beans>